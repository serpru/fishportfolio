@inject NavigationManager NavigationManager
@using fishportfolio.Data

<MudContainer MaxWidth="MaxWidth.False" Class="ma-0 pa-0 d-flex justify-content-start">
    <MudHidden Breakpoint="Breakpoint.MdAndDown">
        <MudBreadcrumbs Class="ma-0 pa-0" Items="_activeItems"/>
    </MudHidden>
</MudContainer>


@code {
    private List<BreadcrumbItem> _activeItems { get; set; } = new();

    private readonly List<BreadcrumbItem> _items = new List<BreadcrumbItem>
    {
        new BreadcrumbItem("Home",                  href: "/",                  icon: Icons.Material.Filled.Home),
        new BreadcrumbItem("Projects",              href: "/projects/",         icon: Icons.Filled.AutoAwesomeMosaic),
        new BreadcrumbItem("Pokemon of the day",    href: "/pokemonoftheday/",  icon: Icons.Filled.CatchingPokemon, disabled: true),
        new BreadcrumbItem("Contact",               href: "/counter/",          icon: Icons.Filled.Email),
        new BreadcrumbItem("Test",                  href: "/test/",             icon: Icons.Filled.Accessible),
        new BreadcrumbItem("Foka",                  href: "/test/foka/",        icon: Icons.Filled.AirlineSeatFlat)
    };

    protected override async Task OnInitializedAsync()
    {
        _activeItems.Add(_items.FirstOrDefault(x => x.Href.Equals("/")));
        var uri = NavigationManager.ToAbsoluteUri(NavigationManager.Uri);
        foreach (var segment in uri.Segments[1..])
        {
            _activeItems.Add(_items.FirstOrDefault(x => x.Href.EndsWith(segment)));
        }

        await base.OnInitializedAsync();
    }
}
