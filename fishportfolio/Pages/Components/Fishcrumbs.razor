@inject NavigationManager NavigationManager
@using fishportfolio.Data

<MudContainer MaxWidth="MaxWidth.False" Class="ma-0 pa-0 d-flex justify-content-start">
    <MudHidden Breakpoint="Breakpoint.MdAndDown">
        <MudBreadcrumbs Class="ma-0 pa-0" Items="_activeItems"/>
    </MudHidden>
</MudContainer>


@code {
    private List<BreadcrumbItem> _activeItems { get; set; } = new();

    private readonly List<BreadcrumbItem> _items = new List<BreadcrumbItem>
    {
        new BreadcrumbItem("Home",                  href: "/",                         icon: Icons.Material.Filled.Home),
        new BreadcrumbItem("Projects",              href: "/projects",                 icon: Icons.Filled.AutoAwesomeMosaic),
        new BreadcrumbItem("Pokemon of the day",    href: "/pokemonoftheday",          icon: Icons.Filled.CatchingPokemon),
        new BreadcrumbItem("Contact",               href: "/counter",                  icon: Icons.Filled.Email),
        new BreadcrumbItem("Test",                  href: "/test",                     icon: Icons.Filled.Accessible),
        new BreadcrumbItem("Foka",                  href: "/test/foka",                icon: Icons.Filled.AirlineSeatFlat),
        new BreadcrumbItem("Logo project",          href: "/projects/projectlogo",     icon: Icons.Filled.Book)
    };

    protected override async Task OnInitializedAsync()
    {
        var uri = NavigationManager.ToAbsoluteUri(NavigationManager.Uri);

        if (uri.Segments.Length > 1)
        {
            for (int i = 0; i < uri.Segments.Length - 1; i++)
            {
                var segment = uri.Segments[i];
                segment = segment.Remove(segment.Length - 1);
                var breadcrumb = _items.FirstOrDefault(x => x.Href.EndsWith(segment));
                var activeItem = new BreadcrumbItem(breadcrumb?.Text, breadcrumb?.Href, i == uri.Segments.Length - 1, breadcrumb?.Icon);
                _activeItems.Add(activeItem);
            }
        }
        var lastBreadcrumb = _items.FirstOrDefault(x => x.Href.EndsWith(uri.Segments[uri.Segments.Length - 1]));
        var lastActiveItem = new BreadcrumbItem(lastBreadcrumb?.Text, lastBreadcrumb?.Href, true, lastBreadcrumb?.Icon);
        _activeItems.Add(lastActiveItem);


        await base.OnInitializedAsync();
    }
}
